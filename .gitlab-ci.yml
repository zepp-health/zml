variables:
  GIT_DEPTH: 0

stages:
  - build
  - deploy

default:
  image: 'node:18'
  tags:
    - cn
  interruptible: true
  # Default job timeout set to 90m https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10520
  timeout: 90m

build:
  stage: build
  script:
    # - npm ci --cache .npm --prefer-offline --no-optional
    - echo "yarn install dependencies"
    - yarn install --ignore-optional --frozen-lockfile --cache-folder .yarn
    - yarn build
    - echo "This job builds done."
  artifacts:
    name: dist
    expire_in: 2 weeks
    paths:
      - dist
  rules:
    # - if: $CI_COMMIT_BRANCH == "develop"
    - if: '$CI_COMMIT_TAG && ($CI_COMMIT_TAG =~ /^v.*-rc$/ || $CI_COMMIT_TAG =~ /^v.*-release$/)'


inner-deploy:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "inner-deploy"
    - npm config set registry https://registry-npm.zepp.top/
    - npm config set "//registry-npm.zepp.top/:_password" $FE_NPM_ZEPP_TOP_PASSWORD
    - npm config set "//registry-npm.zepp.top/:username" $FE_NPM_ZEPP_TOP_USERNAME
    - npm config set "//registry-npm.zepp.top/:email" $FE_NPM_ZEPP_TOP_EMAIL
    - npm config ls
    - npm publish
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v.*-rc$/'

outer-deploy:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "outer-deploy"
    - rm -f .npmrc
    - npm config set registry https://registry.npmjs.org/
    - npm config set "//registry.npmjs.org/:_authToken" $FE_NPMJS_COM_ACCESS_TOKEN
    - npm config ls
    - npm publish --access public --registry https://registry.npmjs.org/
  rules:
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v.*-release$/'
      when: manual

